<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>util.AllResLoadListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext*.xml</param-value>
	</context-param>


	<!-- 
		OpenSessionInViewFilter的主要功能是用来把一个Hibernate Session
		和一次完整的请求过程对应的线程相绑定。OpenSessionInView在request把session
		绑定到当前thread期间一直保持hibernate session在open状态，使session在request
		的整个期间都可以使用，如在View层里PO也可以lazy loading数据，如 ${ emp.name }。
		当View 层逻辑完成后，才会通过Filter的doFilter方法或Interceptor的postHandle方法自动关闭session。
		如不这么做的话，就很容易出现懒加载异常。 
		
		OpenSessionInViewFilter要在StrutsPrepareAndExecuteFilter之前定义，过滤器跟拦截器很像，都是先进后出的
	-->
	<filter>
		<filter-name>openSessionInView</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>

	<!-- 
		<url-pattern>/*</url-pattern>中最好不要写/*, 因为这样的话，访问所有的url都会为
		其开一个session，而其实有些请求并不需要用到的，这样子就会造成性能的下降；
	 -->
	<filter-mapping>
		<filter-name>openSessionInView</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<resource-ref>
		<res-ref-name>jdbc/DataSource</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
